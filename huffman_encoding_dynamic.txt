move @ _ r move1
move * * l *

move2 $ * l control
move2 * * r *

move1 0 @ r m0
move1 1 @ r m1
move1 a @ r ma
move1 b @ r mb
move1 c @ r mc
move1 d @ r md
move1 o @ r mo
move1 ( @ r m(
move1 ) @ r m)
move1 - @ r m-
move1 % _ r move2

m0 $ * r m01
m0 * * r *

m01 _ 0 l move 
m01 * * r *

m1 $ * r m11
m1 * * r *

m11 _ 1 l move 
m11 * * r *

ma $ * r ma1
ma * * r *

ma1 _ a l move 
ma1 * * r *

mb $ * r mb1
mb * * r *

mb1 _ b l move 
mb1 * * r *

mc $ * r mc1
mc * * r *

mc1 _ c l move 
mc1 * * r *

md $ * r md1
md * * r *

md1 _ d l move 
md1 * * r *

mo $ * r mo1
mo * * r *

mo1 _ o l move 
mo1 * * r *

m( $ * r m(1
m( * * r *

m(1 _ ( l move 
m(1 * * r *

m) $ * r m)1
m) * * r *

m)1 _ ) l move 
m)1 * * r *

m- $ * r m-1
m- * * r *

m-1 _ - l move 
m-1 * * r *

copy @ _ r copy1
copy * * l *

copy2 $ * l control
copy2 * * r *

copy1 0 @ l w0
copy1 1 @ l w1
copy1 a @ l wa
copy1 b @ l wb
copy1 c @ l wc
copy1 d @ l wd
copy1 o @ l wo
copy1 ( @ l w(
copy1 ) @ l w)
copy1 - @ l w-
copy1 % _ r copy2

w0 _ 0 r w01

w01 $ * r w02
w01 * * r *

w02 _ 0 l copy 
w02 * * r *

w1 _ 1 r w11

w11 $ * r w12
w11 * * r *

w12 _ 1 l copy 
w12 * * r *

wa _ a r wa1

wa1 $ * r wa2
wa1 * * r *

wa2 _ a l copy 
wa2 * * r *

wb _ b r wb1

wb1 $ * r wb2
wb1 * * r *

wb2 _ b l copy 
wb2 * * r *

wc _ c r wc1

wc1 $ * r wc2
wc1 * * r *

wc2 _ c l copy 
wc2 * * r *

wd _ d r wd1

wd1 $ * r wd2
wd1 * * r *

wd2 _ d l copy 
wd2 * * r *

wo _ o r wo1

wo1 $ * r wo2
wo1 * * r *

wo2 _ o l copy 
wo2 * * r *

w( _ ( r w(1

w(1 $ * r w(2
w(1 * * r *

w(2 _ ( l copy 
w(2 * * r *

w) _ ) r w)1

w)1 $ * r w)2
w)1 * * r *

w)2 _ ) l copy 
w)2 * * r *

w- _ - r w-1

w-1 $ * r w-2
w-1 * * r *

w-2 _ - l copy 
w-2 * * r *

writeLeft _ * l writeLeft1
writeLeft * * l *

writeLeft1 _ $ l writeLeft2
writeLeft1 # * r moveWord
writeLeft1 * * l *

writeLeft3 $ _ l writeLeft
writeLeft3 * * r *

writeLeft2 0 * l wl0
writeLeft2 1 * l wl1
writeLeft2 a * l wla
writeLeft2 b * l wlb
writeLeft2 c * l wlc
writeLeft2 d * l wld
writeLeft2 o * l wlo
writeLeft2 ( * l wl(
writeLeft2 ) * l wl)
writeLeft2 - * l wl-

wl0 # * l wl01
wl0 * * l *

wl01 _ 0 r writeLeft3 
wl01 * * l *

wl1 # * l wl11
wl1 * * l *

wl11 _ 1 r writeLeft3 
wl11 * * l *

wla # * l wla1
wla * * l *

wla1 _ a r writeLeft3 
wla1 * * l *

wlb # * l wlb1
wlb * * l *

wlb1 _ b r writeLeft3 
wlb1 * * l *

wlc # * l wlc1
wlc * * l *

wlc1 _ c r writeLeft3 
wlc1 * * l *

wld # * l wld1
wld * * l *

wld1 _ d r writeLeft3 
wld1 * * l *

wlo # * l wlo1
wlo * * l *

wlo1 _ o r writeLeft3 
wlo1 * * l *

wl( # * l wl(1
wl( * * l *

wl(1 _ ( r writeLeft3 
wl(1 * * l *

wl) # * l wl)1
wl) * * l *

wl)1 _ ) r writeLeft3 
wl)1 * * l *

wl- # * l wl-1
wl- * * l *

wl-1 _ - r writeLeft3 
wl-1 * * l *

moveToFront @ _ l moveToFront1
moveToFront * * l *

moveToFront2 # * r control
moveToFront2 * * r *

moveToFront1 0 @ r mf0
moveToFront1 1 @ r mf1
moveToFront1 a @ r mfa
moveToFront1 b @ r mfb
moveToFront1 c @ r mfc
moveToFront1 d @ r mfd
moveToFront1 o @ r mfo
moveToFront1 ( @ r mf(
moveToFront1 ) @ r mf)
moveToFront1 - @ r mf-
moveToFront1 % _ r moveToFront2

mf0 # * l mf01
mf0 * * r *

mf01 _ 0 l moveToFront 
mf01 * * l *

mf1 # * l mf11
mf1 * * r *

mf11 _ 1 l moveToFront 
mf11 * * l *

mfa # * l mfa1
mfa * * r *

mfa1 _ a l moveToFront 
mfa1 * * l *

mfb # * l mfb1
mfb * * r *

mfb1 _ b l moveToFront 
mfb1 * * l *

mfc # * l mfc1
mfc * * r *

mfc1 _ c l moveToFront 
mfc1 * * l *

mfd # * l mfd1
mfd * * r *

mfd1 _ d l moveToFront 
mfd1 * * l *

mfo # * l mfo1
mfo * * r *

mfo1 _ o l moveToFront 
mfo1 * * l *

mf( # * l mf(1
mf( * * r *

mf(1 _ ( l moveToFront 
mf(1 * * l *

mf) # * l mf)1
mf) * * r *

mf)1 _ ) l moveToFront 
mf)1 * * l *

mf- # * l mf-1
mf- * * r *

mf-1 _ - l moveToFront 
mf-1 * * l *

find 0 _ r f0
find 1 _ r f1
find a _ r fa
find b _ r fb
find c _ r fc
find d _ r fd
find o _ r fo
find ( _ r f(
find ) _ r f)
find - _ r f-

f0 0 * l moveWord
f0 * * r *

f1 1 * l moveWord
f1 * * r *

fa a * l moveWord
fa * * r *

fb b * l moveWord
fb * * r *

fc c * l moveWord
fc * * r *

fd d * l moveWord
fd * * r *

fo o * l moveWord
fo * * r *

f( ( * l moveWord
f( * * r *

f) ) * l moveWord
f) * * r *

f- - * l moveWord
f- * * r *

